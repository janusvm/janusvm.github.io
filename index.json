[{"authors":null,"categories":["R"],"content":" Second time\u0026rsquo;s the charm, right?\nLast time I made an attempt at getting my github.io site up and running, it ended up being half-baked and I left it unused for over a year. In the meantime, my number of repositories with GitHub Pages steadily increased, resulting in a bunch of janusvm.github.io/repo links that were nowhere to be found on what ought to be the root site.\nAfter giving three talks this month, each with slides on GH Pages, I decided it was time to organise my stuff and update this website. Being an R enthusiast, it was a no-brainer for me to use blogdown, and following the recommendation in the book, I opted for the Academic Hugo theme for its nice defaults, extra features, and customisation options.\nTheme customisations The Academic theme has eight built-in colour themes and three font themes, but none of them hit the mark 100% for me. When it comes to colour themes, I\u0026rsquo;m hopelessly in love with Nord â€” I use it for Emacs, Bash, and whatever else that lets me configure its interface colours. Here\u0026rsquo;s how I\u0026rsquo;ve set it up on this site:\nIn a file called /data/themes/nord.toml:\n# Theme metadata name = \u0026quot;Nord\u0026quot; # Is theme light or dark? light = true # Primary primary = \u0026quot;#bf616a\u0026quot; primary_light = \u0026quot;#d08770\u0026quot; primary_dark = \u0026quot;#a5545b\u0026quot; # Menu menu_primary = \u0026quot;#3b4252\u0026quot; menu_text = \u0026quot;#eceff4\u0026quot; menu_text_active = \u0026quot;#88c0d0\u0026quot; menu_title = \u0026quot;#eceff4\u0026quot; # Home sections home_section_odd = \u0026quot;#fff\u0026quot; home_section_even = \u0026quot;#eff2f7\u0026quot;  and then in my config.toml:\ncolor_theme = \u0026quot;nord\u0026quot;  This sets the colours of just about everything except for code blocks. Highlight.js does have the Nord theme, but it turns out it isn\u0026rsquo;t on the CDNJS server yet, which means that you can\u0026rsquo;t just put highlight_style = \u0026quot;nord\u0026quot; in config.toml.\nInstead, download nord.css from the repository, put it in /static/css, and add \u0026quot;nord.css\u0026quot; to the custom_css array in the config, e.g.\ncustom_css = [\u0026quot;nord.css\u0026quot;, \u0026quot;fonts/iosevka.css\u0026quot;, \u0026quot;custom.css\u0026quot;]  The other two CSS files in there define the Iosevka font face and some miscellaneous adjustments, respectively. I have used many different monospace fonts for coding, but after recently discovering Iosevka, I may finally have found a font to settle down with.\nThe fonts used on the site are customised via the file /data/fonts/custom.toml:\n# Font style metadata name = \u0026quot;Custom\u0026quot; # Optional Google font URL google_fonts = \u0026quot;Abel|Roboto:400,400italic,700|Roboto+Condensed:300\u0026quot; # Font families heading_font = \u0026quot;Abel\u0026quot; body_font = \u0026quot;Roboto\u0026quot; nav_font = \u0026quot;Roboto Condensed\u0026quot; mono_font = \u0026quot;Iosevka SS04 Web\u0026quot; # Font size font_size = \u0026quot;20\u0026quot; font_size_small = \u0026quot;16\u0026quot;  and the config entry:\nfont = \u0026quot;custom\u0026quot;  Deployment It turns out to be relatively simple to have the source files in one repository and the published site in another, if you\u0026rsquo;re comfortable using git submodules:\n Create the repository user.github.io on GitHub (where user is your username) If you don\u0026rsquo;t initialise it with any files, push an empty commit (from a temporary folder somewhere else) to it first:\ngit init git commit -m \u0026quot;Initial commit\u0026quot; --allow-empty git remote add origin https://github.com/user/user.github.io.git git push -u origin master  From the folder with your blog source (assuming it\u0026rsquo;s already a git repository), add user.github.io as a submodule in /public:\nrm -rf public git submodule add -b master https://github.com/user/user.github.io.git public  Build the site:\nhugo  Commit and push the submodule:\ncd public git add . git commit -m \u0026quot;Build site\u0026quot; git push -u origin master   After that, the site is deployed. In my experience, GitHub Pages sometimes don\u0026rsquo;t actually build the site the first time you push after activating Pages, so if nothing shows up after a few minutes, try pushing another commit.\nLinks I found this post by Leslie Myint in addition to Hugo\u0026rsquo;s hosting guide and the Academic theme documentation to be very helpful when setting up this site.\n","date":1540425600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1540425600,"objectID":"7ac122788443ce304b57338822cd7e64","permalink":"https://janusvm.github.io/2018/10/25/hello-world-2/","publishdate":"2018-10-25T00:00:00Z","relpermalink":"/2018/10/25/hello-world-2/","section":"post","summary":"Second time\u0026rsquo;s the charm, right?\nLast time I made an attempt at getting my github.io site up and running, it ended up being half-baked and I left it unused for over a year. In the meantime, my number of repositories with GitHub Pages steadily increased, resulting in a bunch of janusvm.github.io/repo links that were nowhere to be found on what ought to be the root site.\nAfter giving three talks this month, each with slides on GH Pages, I decided it was time to organise my stuff and update this website.","tags":["blogdown"],"title":"Hello World! (2)","type":"post"},{"authors":["Janus Valberg-Madsen","Mads Lindskou"],"categories":null,"content":" Intended audience First year Math/Math-Econ/Math-Tech students at Aalborg University.\n","date":1540418400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1540418400,"objectID":"66e2bc0765ac06ecd6fce6953bf7481c","permalink":"https://janusvm.github.io/talk/aau-git-workshop/","publishdate":"2018-10-25T00:00:00+02:00","relpermalink":"/talk/aau-git-workshop/","section":"talk","summary":"When you work on a large group project, it can be advantageous to keep track of changes with a _version control system_.\nGit is the most widespread of such systems, and web platforms like GitHub make it easy to overview and collaborate.\nWith Git and GitHub not only do you have a complete backup of your project and its history, but you have a structured way to access old versions of files, reviwing changes before applying them, and much, much more.\n\nThis workshop will aim to:\n\n- show you the idea behind version control\n- teach you basic Git commands\n- introduce you to a Git-based workflow for project writing\n- get your own project repositories set up and ready\n","tags":["teaching","git"],"title":"Git Workshop","type":"talk"},{"authors":["Janus Valberg-Madsen","Mads Lindskou"],"categories":null,"content":" Intended audience First year Math/Math-Econ/Math-Tech students at Aalborg University.\n","date":1540418400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1540418400,"objectID":"e8026bb0bb04c5f42d8d65cc3d38c241","permalink":"https://janusvm.github.io/talk/aau-latex-workshop/","publishdate":"2018-10-25T00:00:00+02:00","relpermalink":"/talk/aau-latex-workshop/","section":"talk","summary":"LaTeX is a typesetting system which is widely used in academia, and on AAU, you are expected to use it.\nThis compilation based way of writing offers many advantages over WYSIWYG editors like MS Word, such as cross-platform compatibility, editor agnosticism, extensibility, and version control friendly format.\n\nThis workshop will aim to:\n\n* show you a bit about _how_ LaTeX works\n* show you how to structure a group project\n* prepare you for the upcoming semester project with a project template\n","tags":["teaching","latex"],"title":"LaTeX Workshop","type":"talk"},{"authors":null,"categories":null,"content":" Slides from my Git Workshop: janusvm.github.io/aau-git-workshop\n Very simple introduction to Git: think-like-a-git.net\n More comprehensive tutorials: www.atlassian.com/git/tutorials\n Tips on writing commit messages: chris.beams.io/posts/git-commit\n Fixing mistakes: sethrobertson.github.io/GitFixUm/fixup.html\n  ","date":1540418400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1540418400,"objectID":"ddcb92a8c060b696245e3af502bd4ed7","permalink":"https://janusvm.github.io/resource/git-links/","publishdate":"2018-10-25T00:00:00+02:00","relpermalink":"/resource/git-links/","section":"resource","summary":" Slides from my Git Workshop: janusvm.github.io/aau-git-workshop\n Very simple introduction to Git: think-like-a-git.net\n More comprehensive tutorials: www.atlassian.com/git/tutorials\n Tips on writing commit messages: chris.beams.io/posts/git-commit\n Fixing mistakes: sethrobertson.github.io/GitFixUm/fixup.html\n  ","tags":null,"title":"Links","type":"docs"},{"authors":["Janus Valberg-Madsen"],"categories":null,"content":" Intended audience Members of the Aalborg R User Group.\n","date":1540418400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1540418400,"objectID":"fd34c0dbea4eae2987532e65dd5c4c1e","permalink":"https://janusvm.github.io/talk/nse-aalborgrug/","publishdate":"2018-10-25T00:00:00+02:00","relpermalink":"/talk/nse-aalborgrug/","section":"talk","summary":"Metaprogramming is when a computer program has the ability to treat programs as their data, enabling them to read or generate code, or even modify itself while running.\nIt's a technique that became popular with the programming language Lisp, from which R inherits many ideas.\n\nIn this talk, I dive into the inner workings of R and look at how the code you write is represented by the interpreter, give an overview of the tools available in the package [rlang](https://github.com/r-lib/rlang), and show off some common usecases in a [tidyverse](https://github.com/tidyverse/tidyverse) framework.\n","tags":["R","programming","metaprogramming","tidyverse"],"title":"Non-Standard Evaluation and Metaprogramming in R","type":"talk"}]